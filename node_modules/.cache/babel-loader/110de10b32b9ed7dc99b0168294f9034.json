{"ast":null,"code":"var _jsxFileName = \"/Users/a1398/simple_form_validation/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      accept: false,\n      errors: {\n        username: true,\n        email: true,\n        password: true,\n        accept: true\n      }\n    };\n    this.messages = {\n      username_incorrect: 'Nazwa musi być dłuzsza niz 10 znaków',\n      email_incorrect: 'Nieprawidłowy email',\n      password_incorrect: 'Hasło min. 8 znaków',\n      accept_incorrect: \"Potwierdź zgodę\"\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const type = e.target.type;\n\n      if (type === \"text\" || type === \"password\" || type === \"email\") {\n        const value = e.target.value;\n        this.setState({\n          [name]: value\n        });\n      } else if (type === \"checkbox\") {\n        const checked = e.target.checked;\n        this.setState({\n          [name]: checked\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const validation = this.formValidation();\n\n      if (validation) {\n        this.setState({\n          username: '',\n          email: '',\n          password: '',\n          accept: false,\n          errors: {\n            username: false,\n            email: false,\n            password: false,\n            accept: false\n          }\n        });\n      } else {\n        this.setState({\n          errors: {\n            username: !validation.username,\n            email: false,\n            password: false,\n            accept: false\n          }\n        });\n      }\n    };\n\n    this.formValidation = () => {\n      //true - ok\n      //false - źle\n      let username = false;\n      let email = false;\n      let password = false;\n      let accept = false;\n      let correct = false;\n\n      if (this.state.username.length > 10 && this.state.username.indexOf(' ') === -1) {\n        username = true;\n      }\n\n      if (this.state.email.indexOf('@') !== -1) {\n        email = true;\n      }\n\n      if (this.state.email.length === 8) {\n        password = true;\n      }\n\n      if (this.state.accept) {\n        accept = true;\n      }\n\n      if (username && email && password && accept) {\n        correct = true;\n      }\n\n      return {\n        correct,\n        username,\n        email,\n        password,\n        accept\n      };\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Twoje imi\\u0119:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"user\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), this.state.errors.username && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.messages.username_incorrect)), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Tw\\xF3j adres e-mail:\", React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), this.state.errors.email && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.messages.email_incorrect)), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Twoje has\\u0142o:\", React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), this.state.errors.password && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.messages.password_incorrect)), React.createElement(\"label\", {\n      htmlFor: \"accept\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"accept\",\n      name: \"accept\",\n      checked: this.state.accept,\n      onChange: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), \"Zgoda\", this.state.errors.accept && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.messages.accept_incorrect)), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Zapisz si\\u0119\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/a1398/simple_form_validation/src/App.js"],"names":["React","Component","App","state","username","email","password","accept","errors","messages","username_incorrect","email_incorrect","password_incorrect","accept_incorrect","handleChange","e","name","target","type","value","setState","checked","handleSubmit","preventDefault","validation","formValidation","correct","length","indexOf","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    accept: false,\n\n    errors: {\n      username: true,\n      email: true,\n      password: true,\n      accept: true,\n    }\n  }\n\n  messages = {\n    username_incorrect: 'Nazwa musi być dłuzsza niz 10 znaków',\n    email_incorrect: 'Nieprawidłowy email',\n    password_incorrect: 'Hasło min. 8 znaków',\n    accept_incorrect: \"Potwierdź zgodę\",\n  }\n\n  handleChange = (e) => {\n\n    const name = e.target.name;\n    const type = e.target.type;\n\n    if(type === \"text\" || type === \"password\" || type === \"email\") {\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      })\n    } else if (type === \"checkbox\") {\n      const checked = e.target.checked;\n      this.setState({\n        [name]: checked\n      })\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const validation = this.formValidation()\n\n    if(validation) {\n      this.setState({\n        username: '',\n        email: '',\n        password: '',\n        accept: false,\n\n        errors: {\n          username: false,\n          email: false,\n          password: false,\n          accept: false,\n        }\n      })\n    } else {\n      this.setState({\n        errors: {\n          username: !validation.username,\n          email: false,\n          password: false,\n          accept: false,\n        }\n      })\n    }\n  }\n\n  formValidation = () => {\n    //true - ok\n    //false - źle\n    let username = false;\n    let email = false;\n    let password = false;\n    let accept = false;\n    let correct = false;\n    \n    if(this.state.username.length > 10 && this.state.username.indexOf(' ') === -1) {\n      username = true;\n    }\n\n    if(this.state.email.indexOf('@') !== -1) {\n      email = true;\n    }\n\n    if(this.state.email.length === 8) {\n      password = true;\n    }\n\n    if(this.state.accept) {\n      accept = true;\n    }\n\n    if(username && email && password && accept) {\n      correct = true;\n    }\n\n    return ({\n      correct,\n      username,\n      email,\n      password,\n      accept\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.handleSubmit} noValidate>\n          <label htmlFor=\"user\">Twoje imię: \n            <input type=\"text\" id=\"user\" name=\"username\"\n            value={this.state.username} onChange={this.handleChange}/>\n              {this.state.errors.username && <span>{this.messages.username_incorrect}</span>}\n          </label>\n\n          <label htmlFor=\"email\">Twój adres e-mail: \n            <input type=\"email\" id=\"email\" name=\"email\"\n            value={this.state.email} onChange={this.handleChange}/>\n              {this.state.errors.email && <span>{this.messages.email_incorrect}</span>}\n          </label>\n\n          <label htmlFor=\"password\">Twoje hasło: \n            <input type=\"password\" id=\"password\" name=\"password\"\n            value={this.state.password} onChange={this.handleChange}/>\n              {this.state.errors.password && <span>{this.messages.password_incorrect}</span>}\n          </label>\n\n          <label htmlFor=\"accept\">\n            <input type=\"checkbox\" id=\"accept\" name=\"accept\" checked={this.state.accept} onChange={this.handleSubmit} />Zgoda\n              {this.state.errors.accept && <span>{this.messages.accept_incorrect}</span>}\n          </label>\n\n          <button>Zapisz się</button>\n\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}